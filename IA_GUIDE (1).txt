INFY INTERNS
+++++++++++++

In THIS sequence, it should be solved


0. Utility -> Logging Aspect

	- CLASS LEVEL Annotations = @Aspect, @Component
		import from aspectj, springframework.stereotype respectively

	- METHOD LEVEL Annotation

@AfterThrowing(
pointcut = "
execution(* com.infy.cabbooking.service.CabBookingServiceImpl.*(..))",throwing = "exception")
    public void logServiceException(CabBookingException exception)
    {
    	LOGGER.error(exception.getMessage(), exception);
    }




1. Entity class
	- Annotations only 
		= CLASS LEVEL = @Entity
		*= @Table(name = "mentor")	.....no spaces in name
		= @Id
		*= @Column   	..... better to add for every feature
		= @GeneratedValue(strategy = GenerationType.IDENTITY)
		= @ManyToOne(cascade = CascadeType.ALL)
		= @JoinColumn(name = "mentor_id")

	- import from javax.persistence

	- OPEN TABLESCRIPT AND COMPARE TABLE DATA


2. DTO class
	- Annotations only ===> validationMESSAGES.PROPERTIES ==> IN QP VALIDATION rules WRITTEN in API class

	- @NotNull(message = "{mentor.mentorid.absent}") 	
		message from valdation properties file

	- @Valid for the aggregation relation (ANOTHER DTO)




3. Utility -> ExceptionControllerAdvice

	- Annotations 
		= CLASS LEVEL @RestControllerAdvice
		= @Autowired the environment
		= METHOD LEVEL @ExceptionHandler(Exception.class)


4. Repository class

	- CHANCE OF WRONG IMPORTS = LIST FROM JAVA.UTIL ONLY

	- extends CrudRepository<entity, PKdataType> ====> extends CrudRepository<Mentor, Integer>

	- add one method line (as per QP)

	public List<Mentor> ______( ___ );

	repo method always starts with findBy

	search for the variable name in ENTITY class & copy paste in method name "IN CAMEL CASING" = numberOfProjectsMentored

	findByNumberOfProjectsMentored 

	method parameter = any input = Integer numberOfProjectsMentored

	public List<Mentor> findByNumberOfProjectsMentored (Integer numberOfProjectsMentored);
	

	

DONE = ENTITY, DTO, UTILITY, REPO	HARDLY ANY MARKS 	MAX. 20 MINS
LEFT = SERVICE, API, TEST		MOST MARKS		1.5 HRS


5. Service class
	- Annotations  
		= CLASS LEVEL
			- @Service(value = "projectAllocationService") 
			 ...... class name without impl in camel casing
			- @Transactional
		= @Autowired the repos
	- import only from org.springframework


6. Test
	- Annotations 
		= CLASS LEVEL  @SpringBootTest
		= @Mock the repository
		= @InjectMocks the service
		= @Test for the methods

	ASSERTIONS FROM JUNIT.JUPITER

	- import from org.springframework, org.mockito, org.mockito, org.junit.jupiter respectively

7. API
	- Annotations 
		= CLASS LEVEL @RestController
		*= CLASS LEVEL FOR PATH VALIDATION @Validated	
		= CLASS LEVEL @RequestMapping("/infyinterns")	
			for defining base uri

		= AUTOWIRE ENVIRONMENT (org.springframework)
		= METHOD LEVEL
			- @GetMapping("/customers")
			- @PostMapping("/customers")
			- @PutMapping("/customers")
			- @DeleteMapping("/customers")

		= PARAMETER LEVEL
			- @PathVariable		{cid} in path
			- @RequestParam		query string
			- @RequestBody		POST & PUT
			- @Valid			bean validation of dto


http://localhost:8765/infyinterns/project

http://localhost:portnumber/baseURI/endpoints

|--which appln-------------------|---which api class-----|-----which method-----|

8765 = port number
	

